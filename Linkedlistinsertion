#include<stdio.h>
#include<stdlib.h>
struct Node
{
int data;
struct Node *next;
};
void linkedlisttraversal(struct Node*ptr)
{
while(ptr!=NULL)
{
printf("Elements:%d\n",ptr->data);
ptr=ptr->next;
}
}
struct Node*insertatfirst(struct Node*head, int data)
{
struct Node*ptr=(struct Node*)malloc(sizeof(struct Node));
ptr->data=data;
ptr->next=head;
head=ptr;
return head;
}
struct Node*insertatindex(struct Node*head,int data,int index)
{
struct Node*ptr=(struct Node*)malloc(sizeof(struct Node));
struct Node*temp=head;
int a=0;
while(a!=index-1)
{
temp=temp->next;
a++;
}
ptr->data=data;
ptr->next=temp->next;
temp->next=ptr;
return head;
}
struct Node*insertatend(struct Node*head,int data)
{
struct Node*ptr=(struct Node*)malloc(sizeof(struct Node));
struct Node*temp=head;
while(temp->next!=NULL)
{
temp=temp->next;   //head
}
ptr->data=data;
temp->next=ptr;
ptr->next=NULL;
return head;
}
int main()
{
struct Node*head,*second,*third,*fourth;
head=(struct Node*)malloc(sizeof(struct Node));
second=(struct Node*)malloc(sizeof(struct Node));
third=(struct Node*)malloc(sizeof(struct Node));
fourth=(struct Node*)malloc(sizeof(struct Node));
head->data=5;
head->next=second;
second->data=10;
second->next=third;
third->data=12;
third->next=fourth;
fourth->data=31;
fourth->next=NULL;
printf("linkedlist before insertion \n");
linkedlisttraversal(head);
head=insertatfirst(head,41);
head=insertatindex(head,15,4);
head=insertatend(head,25);
printf("linkedlist after insertion \n");
linkedlisttraversal(head);
return 0;
}
